/*
 * Copyright (C) 2019 Intel Corporation
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */


enclave
{
	include "sgx_quote.h"

    trusted
    {
        #define BUFLEN 2048
        #define MBED_TLS_KEY_SIZE 2049
        #define MBEDTLS_MPI_MAX_SIZE 1024
        #define AES_128_KEY_SIZE 16

        public sgx_status_t ecall_initPVRA(
            [out] sgx_report_t *report,
            [in] sgx_target_info_t *target_info,
            [out, size=sealedstate_size] char *sealedstate,
            size_t sealedstate_size,
            [out, size=signature_size] char *enckey_signature, size_t signature_size,
            [out, size=enckey_size] char *pub_enckey, size_t enckey_size);

        public sgx_status_t ecall_commandPVRA(
            [in, size=sealedstate_size] char *sealedstate, size_t sealedstate_size,
            [in, size=signedFT_size] char *signedFT, size_t signedFT_size,
            [in, size=FT_size] char *FT, size_t FT_size,
            [in, size=eCMD_size] char *eCMD, size_t eCMD_size,
            [in, size=eAESkey_size] char *eAESkey, size_t eAESkey_size,
            [out, size=cResponse_size] char *cResponse, size_t cResponse_size, 
            [out, size=cRsig_size] char *cRsig, size_t cRsig_size,
            [out, size=sealedout_size] char *sealedout, size_t sealedout_size
            );

        

        public sgx_status_t ecall_calc_buffer_sizes(
            [out] size_t* esignature_size);


        #undef BUFLEN
        #undef MBED_TLS_KEY_SIZE
        #undef MBEDTLS_MPI_MAX_SIZE
    };

    untrusted
    {
        void ocall_print_string([in, string] const char *str);
        void ocall_rdtsc(void);
        void ocallbuf(int size);
        //void ocall_print_int([in, int] const int num);
    };
};
